# Reporting Service Configuration v1.0
# Optimized for high-performance report generation with comprehensive monitoring

spring:
  application:
    name: reporting-service

server:
  port: 8085
  tomcat:
    threads:
      max: 200
      min-spare: 20
    max-connections: 10000
    connection-timeout: 5000

# Database Configuration with HikariCP optimization
spring:
  datasource:
    url: jdbc:postgresql://localhost:5432/enrollment_db
    username: ${DB_USER:reporting_service}
    password: ${DB_PASSWORD:}
    driver-class-name: org.postgresql.Driver
    hikari:
      # Connection pool optimization based on report generation workload
      minimum-idle: 5
      maximum-pool-size: 20
      idle-timeout: 300000 # 5 minutes
      connection-timeout: 30000 # 30 seconds
      max-lifetime: 1800000 # 30 minutes
      leak-detection-threshold: 60000 # 1 minute
      # Performance optimization properties
      data-source-properties:
        cachePrepStmts: true
        prepStmtCacheSize: 250
        prepStmtCacheSqlLimit: 2048
        useServerPrepStmts: true

# Report Generation Configuration
report:
  generation:
    # Thread pool configuration for parallel report processing
    core-pool-size: ${REPORT_CORE_POOL_SIZE:4}
    max-pool-size: ${REPORT_MAX_POOL_SIZE:8}
    queue-capacity: 100
    keep-alive: 60
    thread-name-prefix: report-executor-
    # Report generation timeouts
    execution-timeout: 3600000 # 1 hour
    query-timeout: 300000 # 5 minutes

  storage:
    # Report storage configuration
    path: ${REPORT_STORAGE_PATH:/data/reports}
    retention-days: 30
    cleanup-cron: "0 0 1 * * ?" # Run at 1 AM daily
    backup-enabled: true
    
  types:
    # Report type specific configurations
    APPLICATION_SUMMARY:
      max-rows: 10000
      timeout: 300000 # 5 minutes
      cache-ttl: 3600 # 1 hour
      allowed-formats: [PDF, EXCEL, CSV]
      
    WORKFLOW_ANALYTICS:
      max-rows: 5000
      timeout: 600000 # 10 minutes
      cache-ttl: 7200 # 2 hours
      allowed-formats: [PDF, EXCEL]
      
    ENROLLMENT_STATISTICS:
      max-rows: 20000
      timeout: 900000 # 15 minutes
      cache-ttl: 14400 # 4 hours
      allowed-formats: [PDF, EXCEL, CSV]

# Monitoring and Metrics Configuration
management:
  endpoints:
    web:
      exposure:
        include: health,metrics,prometheus
  metrics:
    export:
      prometheus:
        enabled: true
        step: 60s
      graphite:
        enabled: true
        step: 60s
        host: ${GRAPHITE_HOST:localhost}
        port: ${GRAPHITE_PORT:2003}
    tags:
      application: ${spring.application.name}
      environment: ${ENVIRONMENT:production}
  health:
    db:
      enabled: true
    diskspace:
      enabled: true
    
# Logging Configuration
logging:
  level:
    root: INFO
    com.enrollment.reporting: INFO
    com.zaxxer.hikari: WARN
  pattern:
    console: "%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n"
    file: "%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n"
  file:
    name: ${LOG_PATH:/var/log/reporting-service}/reporting-service.log
    max-size: 100MB
    max-history: 30

# Cache Configuration
spring:
  cache:
    type: redis
    redis:
      time-to-live: 3600000 # 1 hour
      cache-null-values: false
      use-key-prefix: true
      key-prefix: report_
      
# Resilience Configuration
resilience4j:
  ratelimiter:
    instances:
      report-generation:
        limit-for-period: 100
        limit-refresh-period: 1m
        timeout-duration: 5s
  bulkhead:
    instances:
      report-generation:
        max-concurrent-calls: 20
  retry:
    instances:
      report-generation:
        max-attempts: 3
        wait-duration: 5s
        retry-exceptions:
          - java.sql.SQLException
          - org.springframework.dao.QueryTimeoutException