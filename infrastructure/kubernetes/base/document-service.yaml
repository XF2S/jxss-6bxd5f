# Document Service Kubernetes Base Configuration
# Version: 1.0.0
# Provides secure, scalable deployment configuration for the Document Service

---
apiVersion: v1
kind: Service
metadata:
  name: document-service
  namespace: enrollment-system
  labels:
    app: document-service
    component: backend
  annotations:
    prometheus.io/scrape: "true"
    prometheus.io/port: "9090"
    prometheus.io/path: "/metrics"
spec:
  type: ClusterIP
  ports:
    - port: 8000
      targetPort: 8000
      protocol: TCP
      name: http
    - port: 9090
      targetPort: 9090
      protocol: TCP
      name: metrics
  selector:
    app: document-service

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: document-service
  namespace: enrollment-system
  labels:
    app: document-service
    component: backend
  annotations:
    prometheus.io/scrape: "true"
    prometheus.io/port: "9090"
spec:
  replicas: 2
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  selector:
    matchLabels:
      app: document-service
  template:
    metadata:
      labels:
        app: document-service
        component: backend
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "9090"
    spec:
      serviceAccountName: document-service
      securityContext:
        fsGroup: 1000
        runAsNonRoot: true
      containers:
        - name: document-service
          image: document-service:1.0.0
          imagePullPolicy: Always
          ports:
            - containerPort: 8000
              name: http
            - containerPort: 9090
              name: metrics
          resources:
            requests:
              cpu: "200m"
              memory: "256Mi"
            limits:
              cpu: "500m"
              memory: "512Mi"
          securityContext:
            allowPrivilegeEscalation: false
            runAsUser: 1000
            runAsGroup: 1000
            readOnlyRootFilesystem: true
            capabilities:
              drop: ["ALL"]
          env:
            - name: ENVIRONMENT
              valueFrom:
                configMapKeyRef:
                  name: document-service-config
                  key: environment
            - name: MONGODB_URI
              valueFrom:
                secretKeyRef:
                  name: mongodb-credentials
                  key: connection_string
            - name: AWS_ACCESS_KEY_ID
              valueFrom:
                secretKeyRef:
                  name: aws-credentials
                  key: access_key_id
            - name: AWS_SECRET_ACCESS_KEY
              valueFrom:
                secretKeyRef:
                  name: aws-credentials
                  key: secret_access_key
            - name: AWS_REGION
              valueFrom:
                configMapKeyRef:
                  name: aws-config
                  key: region
            - name: S3_BUCKET_NAME
              valueFrom:
                configMapKeyRef:
                  name: s3-config
                  key: bucket_name
          volumeMounts:
            - name: tmp
              mountPath: /tmp
            - name: clamav
              mountPath: /var/lib/clamav
          livenessProbe:
            httpGet:
              path: /health/live
              port: 8000
            initialDelaySeconds: 15
            periodSeconds: 30
          readinessProbe:
            httpGet:
              path: /health/ready
              port: 8000
            initialDelaySeconds: 10
            periodSeconds: 30
          startupProbe:
            httpGet:
              path: /health/startup
              port: 8000
            initialDelaySeconds: 5
            periodSeconds: 10
      volumes:
        - name: tmp
          emptyDir: {}
        - name: clamav
          emptyDir: {}
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - weight: 100
              podAffinityTerm:
                labelSelector:
                  matchExpressions:
                    - key: app
                      operator: In
                      values:
                        - document-service
                topologyKey: kubernetes.io/hostname

---
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  name: document-service-pdb
  namespace: enrollment-system
spec:
  minAvailable: 1
  selector:
    matchLabels:
      app: document-service

---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: document-service-network-policy
  namespace: enrollment-system
spec:
  podSelector:
    matchLabels:
      app: document-service
  policyTypes:
    - Ingress
    - Egress
  ingress:
    - from:
        - podSelector:
            matchLabels:
              app: api-gateway
      ports:
        - protocol: TCP
          port: 8000
        - protocol: TCP
          port: 9090
  egress:
    - to:
        - podSelector:
            matchLabels:
              app: mongodb
      ports:
        - protocol: TCP
          port: 27017
    - to:
        - namespaceSelector:
            matchLabels:
              name: aws-services
      ports:
        - protocol: TCP
          port: 443