# Workflow Service Kubernetes Base Configuration
# Version: 1.0.0
# Manages enrollment application state transitions and automated workflows
# Ensures high availability, security, and performance monitoring

---
# Service definition for workflow-service
apiVersion: v1
kind: Service
metadata:
  name: workflow-service
  labels:
    app: workflow-service
    component: backend
    part-of: enrollment-system
spec:
  ports:
    - name: http
      port: 8085
      targetPort: 8085
      protocol: TCP
    - name: grpc
      port: 50055
      targetPort: 50055
      protocol: TCP
  selector:
    app: workflow-service
  type: ClusterIP

---
# Deployment configuration for workflow-service
apiVersion: apps/v1
kind: Deployment
metadata:
  name: workflow-service
  labels:
    app: workflow-service
    component: backend
    part-of: enrollment-system
spec:
  replicas: 3
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  selector:
    matchLabels:
      app: workflow-service
  template:
    metadata:
      labels:
        app: workflow-service
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/path: "/actuator/prometheus"
        prometheus.io/port: "8085"
        prometheus.io/scheme: "http"
        checksum/config: "${CONFIG_CHECKSUM}"
    spec:
      # Security context for pod
      securityContext:
        runAsUser: 1000
        runAsGroup: 1000
        fsGroup: 1000
        runAsNonRoot: true
        seccompProfile:
          type: RuntimeDefault

      # Container configuration
      containers:
        - name: workflow-service
          image: enrollment-system/workflow-service:1.0.0
          imagePullPolicy: IfNotPresent
          
          # Container ports
          ports:
            - name: http
              containerPort: 8085
              protocol: TCP
            - name: grpc
              containerPort: 50055
              protocol: TCP

          # Environment configuration
          env:
            - name: SPRING_PROFILES_ACTIVE
              value: "prod"
            - name: JAVA_OPTS
              value: "-XX:+UseG1GC -Xms1g -Xmx2g -XX:+HeapDumpOnOutOfMemoryError -XX:HeapDumpPath=/app/logs"

          # Resource limits and requests
          resources:
            requests:
              cpu: "500m"
              memory: "1Gi"
            limits:
              cpu: "1500m"
              memory: "2.5Gi"

          # Liveness probe configuration
          livenessProbe:
            httpGet:
              path: /actuator/health/liveness
              port: 8085
            initialDelaySeconds: 45
            periodSeconds: 20
            timeoutSeconds: 5
            failureThreshold: 3

          # Readiness probe configuration
          readinessProbe:
            httpGet:
              path: /actuator/health/readiness
              port: 8085
            initialDelaySeconds: 20
            periodSeconds: 10
            timeoutSeconds: 3
            failureThreshold: 2

          # Startup probe configuration
          startupProbe:
            httpGet:
              path: /actuator/health
              port: 8085
            initialDelaySeconds: 30
            periodSeconds: 10
            failureThreshold: 12

          # Volume mounts
          volumeMounts:
            - name: logs
              mountPath: /app/logs
            - name: config
              mountPath: /app/config
              readOnly: true

      # Volume definitions
      volumes:
        - name: logs
          emptyDir: {}
        - name: config
          configMap:
            name: workflow-config

      # Pod anti-affinity for high availability
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - weight: 100
              podAffinityTerm:
                labelSelector:
                  matchExpressions:
                    - key: app
                      operator: In
                      values:
                        - workflow-service
                topologyKey: kubernetes.io/hostname

---
# Horizontal Pod Autoscaler configuration
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: workflow-service
  labels:
    app: workflow-service
    component: backend
    part-of: enrollment-system
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: workflow-service
  minReplicas: 2
  maxReplicas: 5
  metrics:
    - type: Resource
      resource:
        name: cpu
        target:
          type: Utilization
          averageUtilization: 70
    - type: Resource
      resource:
        name: memory
        target:
          type: Utilization
          averageUtilization: 80
  behavior:
    scaleDown:
      stabilizationWindowSeconds: 300
    scaleUp:
      stabilizationWindowSeconds: 60

---
# Network Policy for workflow-service
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: workflow-service-policy
  labels:
    app: workflow-service
spec:
  podSelector:
    matchLabels:
      app: workflow-service
  policyTypes:
    - Ingress
    - Egress
  ingress:
    - from:
        - podSelector:
            matchLabels:
              part-of: enrollment-system
      ports:
        - port: 8085
          protocol: TCP
        - port: 50055
          protocol: TCP
  egress:
    - to:
        - podSelector:
            matchLabels:
              part-of: enrollment-system
    - to:
        - namespaceSelector:
            matchLabels:
              name: monitoring